# Make sure to set `secrets.DEPLOY_ACCESS_TOKEN`
# Also set `Settings->Actions->General->Workflow permissions` to be "Read and Write permissions"
# This file must be in the repository that requires images
# Update the branch name if needed, and update the `git add` directories

name: pie
on:
  push:
    branches: 'master'
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.check.outputs.run }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Search for pie.json
        id: check
        run: |
          if test -f "./pie.json"; then
            echo "pie.json exists"
            echo "run=true" >> $GITHUB_OUTPUT
          fi

  process:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.run }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout Spugn/pie
        uses: actions/checkout@v3
        with:
          repository: 'Spugn/pie'
          path: 'pie'

      - name: Setup PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: imagick, lz4-kjdev/php-ext-lz4@0.4.3

      # astcenc binaries will be saved to /opt/hostedtoolcache/astcenc/4.4.0/x64/bin/
      - name: Setup astcenc
        uses: supplypike/setup-bin@v3
        with:
          uri: 'https://github.com/ARM-software/astc-encoder/releases/download/4.4.0/astcenc-4.4.0-linux-x64.zip'
          name: 'astcenc'
          version: '4.4.0'

      - name: Setup ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v2

      - name: eat pie
        run: php ./pie/pie.php

      - name: Search for _success file
        id: success
        run: |
          if test -f "./_success"; then
            echo "_success exists"
            echo "success=true" >> $GITHUB_OUTPUT
          fi

      - name: Update Git
        if: ${{ steps.success.outputs.success }}
        run: |
          json=`cat ./pie.json`
          git config --global user.name $user_name
          git config --global user.email $user_email
          git remote set-url origin https://${github_token}@github.com/${repository}
          git add ./static/images
          git rm ./pie.json
          git diff-index --quiet HEAD || git commit -m "[Bot] Extract Images" -m "
          ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          This is an automated process. Issues may or may not have occured.

          Extracted images using the following JSON instructions:
          $json"
          git push
        env:
          user_name: 'Spugn'
          user_email: 'spugn@users.noreply.github.com'
          github_token: ${{ secrets.DEPLOY_ACCESS_TOKEN }}
          repository: ${{ github.repository }}